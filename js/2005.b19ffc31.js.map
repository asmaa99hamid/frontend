{"version":3,"file":"js/2005.b19ffc31.js","mappings":"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","sources":["webpack://Osboha180/./node_modules/@kurkle/color/dist/color.esm.js","webpack://Osboha180/./node_modules/chart.js/dist/chunks/helpers.segment.js","webpack://Osboha180/./node_modules/chart.js/dist/chart.js","webpack://Osboha180/./node_modules/vue-chartjs/dist/index.js"],"sourcesContent":["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set();\n    let i, ilen;\n    for(i = 0, ilen = items.length; i < ilen; ++i){\n        set.add(items[i]);\n    }\n    if (set.size === ilen) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\nfunction toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n function _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        if (thing !== undefined && thing !== null && isArray(thing) !== true) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    drawPointLegend(ctx, options, x, y, null);\n}\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n         case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n         case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5;\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\n function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += font.lineHeight;\n    }\n    ctx.restore();\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    ctx.lineTo(x + w, y + radius.topRight);\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\nfunction _createResolver(scopes, prefixes = [\n    ''\n], rootScopes = scopes, fallback, getTarget = ()=>scopes[0]) {\n    if (!defined(fallback)) {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: rootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, rootScopes, fallback)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete target._keys;\n            delete scopes[0][prop];\n            return true;\n        },\n get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value;\n            delete target._keys;\n            return true;\n        }\n    });\n}\n function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n deleteProperty (target, prop) {\n            delete target[prop];\n            delete proxy[prop];\n            return true;\n        },\n get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n set (target, prop, value) {\n            proxy[prop] = value;\n            delete target[prop];\n            return true;\n        }\n    });\n}\n function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop];\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, value, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    value = value(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (defined(_context.index) && isIndexable(prop)) {\n        value = value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\n                return fallback;\n            }\n        } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (defined(fallback) && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (defined(value)) {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (defined(value)) {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.2.1\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nexport { aL as Ticks, d as defaults } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing'\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPolarAreaController: PolarAreaController,\nPieController: PieController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height1 = chartArea.h * weight;\n            const width1 = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width1, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width1, height1);\n            }\n            stack.start = x;\n            stack.placed += height1;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    active = false;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n    let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID1 = Object.keys(position)[0];\n            const value1 = position[positionAxisID1];\n            titleX = scales[positionAxisID1].getPixelForValue(value1) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel = label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID1].getPixelForValue(value1));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret1 = this._getYAxisLabelAlignment(tl);\n            textAlign = ret1.textAlign;\n            x = ret1.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID1 = Object.keys(position)[0];\n                const value1 = position[positionAxisID1];\n                x = this.chart.scales[positionAxisID1].getPixelForValue(value1);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i1 = 0; i1 < local.length; i1++){\n        const plugin = local[i1];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, scaleOptions) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n    id = scaleOptions.axis || axisFromPosition(scaleOptions.position) || id.length > 1 && determineAxis(id[0].toLowerCase(), scaleOptions);\n    if (id) {\n        return id;\n    }\n    throw new Error(`Cannot determine type of '${name}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.2.1\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i1 = 0, ilen1 = this.data.datasets.length; i1 < ilen1; ++i1){\n            this._updateDataset(i1, isFunction(mode) ? mode({\n                datasetIndex: i1\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter1 = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter1.x, pCenter1.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter2.x, pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter3.x, pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = this.options.spacing / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\nfunction getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nLineElement: LineElement,\nPointElement: PointElement,\nBarElement: BarElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox1 of hitboxes){\n                if (hitbox1.col !== col) {\n                    col = hitbox1.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox1.top = top;\n                hitbox1.left += this.left + padding;\n                hitbox1.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox1.left), hitbox1.width);\n                top += hitbox1.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColors = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.fillStyle = labelColors.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColors.borderWidth) ? Math.max(...Object.values(labelColors.borderWidth)) : labelColors.borderWidth || 1;\n            ctx.strokeStyle = labelColors.borderColor;\n            ctx.setLineDash(labelColors.borderDash || []);\n            ctx.lineDashOffset = labelColors.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth - boxPadding);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - boxPadding - 2);\n            const borderRadius = toTRBLCorners(labelColors.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColors.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        ticks.push({\n            value: Math.round((niceMin + j * spacing) * factor) / factor\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const extra = getTickBackdropHeight(opts) / 2;\n    const outerDistance = scale.drawingArea;\n    const additionalAngle = opts.pointLabels.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + padding[i], additionalAngle);\n        const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n        const size = labelSizes[i];\n        const y = yForAngle(pointLabelPosition.y, size.h, angle);\n        const textAlign = getTextAlignForAngle(angle);\n        const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n        items.push({\n            x: pointLabelPosition.x,\n            y,\n            textAlign,\n            left,\n            top: y,\n            right: left + size.w,\n            bottom: y + size.h\n        });\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign , left , top , right , bottom  } = scale._pointLabelItems[i];\n        const { backdropColor  } = optsAtIndex;\n        if (!isNullOrUndef(backdropColor)) {\n            const borderRadius = toTRBLCorners(optsAtIndex.borderRadius);\n            const padding = toPadding(optsAtIndex.backdropPadding);\n            ctx.fillStyle = backdropColor;\n            const backdropLeft = left - padding.left;\n            const backdropTop = top - padding.top;\n            const backdropWidth = right - left + padding.width;\n            const backdropHeight = bottom - top + padding.height;\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: backdropLeft,\n                    y: backdropTop,\n                    w: backdropWidth,\n                    h: backdropHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n            }\n        }\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import { version, isProxy, toRaw, defineComponent, ref, shallowRef, onMounted, onBeforeUnmount, watch, h } from 'vue';\nimport { Chart as Chart$1, BarController, DoughnutController, LineController, PieController, PolarAreaController, RadarController, BubbleController, ScatterController } from 'chart.js';\n\nconst CommonProps = {\n    data: {\n        type: Object,\n        required: true\n    },\n    options: {\n        type: Object,\n        default: ()=>({})\n    },\n    plugins: {\n        type: Array,\n        default: ()=>[]\n    },\n    datasetIdKey: {\n        type: String,\n        default: \"label\"\n    },\n    updateMode: {\n        type: String,\n        default: undefined\n    }\n};\nconst Props = {\n    type: {\n        type: String,\n        required: true\n    },\n    ...CommonProps\n};\n\nconst compatProps = version[0] === \"2\" ? (internals, props)=>Object.assign(internals, {\n        attrs: props\n    }) : (internals, props)=>Object.assign(internals, props);\nfunction toRawIfProxy(obj) {\n    return isProxy(obj) ? toRaw(obj) : obj;\n}\nfunction cloneProxy(obj) {\n    let src = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : obj;\n    return isProxy(src) ? new Proxy(obj, {}) : obj;\n}\nfunction setOptions(chart, nextOptions) {\n    const options = chart.options;\n    if (options && nextOptions) {\n        Object.assign(options, nextOptions);\n    }\n}\nfunction setLabels(currentData, nextLabels) {\n    currentData.labels = nextLabels;\n}\nfunction setDatasets(currentData, nextDatasets, datasetIdKey) {\n    const addedDatasets = [];\n    currentData.datasets = nextDatasets.map((nextDataset)=>{\n        // given the new set, find it's current match\n        const currentDataset = currentData.datasets.find((dataset)=>dataset[datasetIdKey] === nextDataset[datasetIdKey]);\n        // There is no original to update, so simply add new one\n        if (!currentDataset || !nextDataset.data || addedDatasets.includes(currentDataset)) {\n            return {\n                ...nextDataset\n            };\n        }\n        addedDatasets.push(currentDataset);\n        Object.assign(currentDataset, nextDataset);\n        return currentDataset;\n    });\n}\nfunction cloneData(data, datasetIdKey) {\n    const nextData = {\n        labels: [],\n        datasets: []\n    };\n    setLabels(nextData, data.labels);\n    setDatasets(nextData, data.datasets, datasetIdKey);\n    return nextData;\n}\n/**\n * Get dataset from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getDatasetAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"dataset\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get single dataset element from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"nearest\", {\n        intersect: true\n    }, false);\n}\n/**\n * Get all dataset elements from mouse click event\n * @param chart - Chart.js instance\n * @param event - Mouse click event\n * @returns Dataset\n */ function getElementsAtEvent(chart, event) {\n    return chart.getElementsAtEventForMode(event, \"index\", {\n        intersect: true\n    }, false);\n}\n\nconst Chart = defineComponent({\n    props: Props,\n    setup (props, param) {\n        let { expose  } = param;\n        const canvasRef = ref(null);\n        const chartRef = shallowRef(null);\n        expose({\n            chart: chartRef\n        });\n        const renderChart = ()=>{\n            if (!canvasRef.value) return;\n            const { type , data , options , plugins , datasetIdKey  } = props;\n            const clonedData = cloneData(data, datasetIdKey);\n            const proxiedData = cloneProxy(clonedData, data);\n            chartRef.value = new Chart$1(canvasRef.value, {\n                type,\n                data: proxiedData,\n                options: {\n                    ...options\n                },\n                plugins\n            });\n        };\n        const destroyChart = ()=>{\n            const chart = toRaw(chartRef.value);\n            if (chart) {\n                chart.destroy();\n                chartRef.value = null;\n            }\n        };\n        const update = (chart)=>{\n            chart.update(props.updateMode);\n        };\n        onMounted(renderChart);\n        onBeforeUnmount(destroyChart);\n        watch([\n            ()=>props.options,\n            ()=>props.data\n        ], (param, param1)=>{\n            let [nextOptionsProxy, nextDataProxy] = param, [prevOptionsProxy, prevDataProxy] = param1;\n            const chart = toRaw(chartRef.value);\n            if (!chart) {\n                return;\n            }\n            let shouldUpdate = false;\n            if (nextOptionsProxy) {\n                const nextOptions = toRawIfProxy(nextOptionsProxy);\n                const prevOptions = toRawIfProxy(prevOptionsProxy);\n                if (nextOptions && nextOptions !== prevOptions) {\n                    setOptions(chart, nextOptions);\n                    shouldUpdate = true;\n                }\n            }\n            if (nextDataProxy) {\n                const nextLabels = toRawIfProxy(nextDataProxy.labels);\n                const prevLabels = toRawIfProxy(prevDataProxy.labels);\n                const nextDatasets = toRawIfProxy(nextDataProxy.datasets);\n                const prevDatasets = toRawIfProxy(prevDataProxy.datasets);\n                if (nextLabels !== prevLabels) {\n                    setLabels(chart.config.data, nextLabels);\n                    shouldUpdate = true;\n                }\n                if (nextDatasets && nextDatasets !== prevDatasets) {\n                    setDatasets(chart.config.data, nextDatasets, props.datasetIdKey);\n                    shouldUpdate = true;\n                }\n            }\n            if (shouldUpdate) {\n                update(chart);\n            }\n        }, {\n            deep: true\n        });\n        return ()=>{\n            return h(\"canvas\", {\n                ref: canvasRef\n            });\n        };\n    }\n});\n\nfunction createTypedChart(type, registerables) {\n    Chart$1.register(registerables);\n    return defineComponent({\n        props: CommonProps,\n        setup (props, param) {\n            let { expose  } = param;\n            const ref = shallowRef(null);\n            const reforwardRef = (chartRef)=>{\n                ref.value = chartRef?.chart;\n            };\n            expose({\n                chart: ref\n            });\n            return ()=>{\n                return h(Chart, compatProps({\n                    ref: reforwardRef\n                }, {\n                    type,\n                    ...props\n                }));\n            };\n        }\n    });\n}\nconst Bar = /* #__PURE__ */ createTypedChart(\"bar\", BarController);\nconst Doughnut = /* #__PURE__ */ createTypedChart(\"doughnut\", DoughnutController);\nconst Line = /* #__PURE__ */ createTypedChart(\"line\", LineController);\nconst Pie = /* #__PURE__ */ createTypedChart(\"pie\", PieController);\nconst PolarArea = /* #__PURE__ */ createTypedChart(\"polarArea\", PolarAreaController);\nconst Radar = /* #__PURE__ */ createTypedChart(\"radar\", RadarController);\nconst Bubble = /* #__PURE__ */ createTypedChart(\"bubble\", BubbleController);\nconst Scatter = /* #__PURE__ */ createTypedChart(\"scatter\", ScatterController);\n\nexport { Bar, Bubble, Chart, Doughnut, Line, Pie, PolarArea, Radar, Scatter, createTypedChart, getDatasetAtEvent, getElementAtEvent, getElementsAtEvent };\n//# sourceMappingURL=index.js.map\n"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","isShort","r","g","hexParse","str","ret","len","length","alpha","hexString","undefined","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","hueValue","rgb2hsl","range","calln","Array","isArray","map","hsl2rgb","hwb2rgb","hsv2rgb","hue","hueParse","m","exec","p1","p2","rotate","deg","hslString","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","unpack","unpacked","keys","Object","tkeys","j","ok","nk","replace","parseInt","names","nameParse","transparent","toLowerCase","RGB_RE","rgbParse","rgbString","to","pow","from","interpolate","rgb1","rgb2","t","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","Color","constructor","type","this","_rgb","_valid","valid","obj","mix","color","weight","c1","c2","w2","p","w1","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toPercentage","dimension","endsWith","parseFloat","toDimension","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","_splitKey","parts","split","part","push","_getKeyResolver","resolveObjectKey","resolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","_isClickEvent","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","roundedRange","niceRange","floor","fraction","niceFraction","_factorize","result","sqrt","sort","pop","isNumber","isNaN","almostWhole","rounded","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_int16Range","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","_filterBetween","values","arrayEvents","listenArrayEvents","listener","_chartjs","listeners","defineProperty","configurable","enumerable","forEach","method","base","res","object","unlistenArrayEvents","stub","splice","_arrayUnique","items","set","Set","add","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","debounce","delay","timeout","clearTimeout","setTimeout","_toLeftRightCenter","align","_alignStartEnd","_textX","left","right","rtl","check","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","bottom","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","applyScaleDefaults","display","offset","beginAtZero","bounds","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","route","startsWith","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","override","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","local","appliers","toFontString","_measureText","data","gc","longest","string","textWidth","measureText","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","save","resetTransform","clearRect","height","restore","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","renderText","opts","lines","strokeWidth","strokeColor","line","setRenderOpts","backdrop","drawBackdrop","strokeStyle","strokeText","maxWidth","fillText","decorateText","translation","fillStyle","textAlign","textBaseline","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","decorationWidth","oldColor","fillRect","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","console","warn","resolve","inputs","info","cacheable","_addGrace","minmax","change","keepZero","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","_resolve","cache","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","proxy","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","_resolveWithContext","allKeys","scriptable","indexable","_allKeys","isScriptable","isIndexable","readKey","prefix","needsSubResolver","_resolveScriptable","_resolveArray","Error","join","delete","createSubResolver","arr","filter","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","monotoneAdjust","deltaK","mK","pointsLen","alphaK","betaK","tauK","squaredMagnitude","pointCurrent","pointAfter","monotoneCompute","valueAxis","pointBefore","iPixel","vPixel","splineCurveMonotone","slopeDelta","capControlPoint","pt","capBezierPoints","inArea","inAreaPrev","inAreaNext","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","el","getPropertyValue","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getCanvasPosition","touches","offsetX","offsetY","box","getBoundingClientRect","clientX","clientY","getRelativePosition","event","borderBox","boxSizing","paddings","borders","getContainerSize","maxHeight","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","containerSize","maintainHeight","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRightToLeftAdapter","rectX","setWidth","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","getSegment","segment","startBound","endBound","_boundSegment","prevValue","inside","subStart","startIsBefore","endIsBefore","shouldStart","shouldStop","_boundSegments","segments","sub","findStartAndEnd","solidSegments","cur","stop","_computeSegments","segmentOptions","_loop","splitByStyles","completeLoop","_fullLoop","doSplitByStyles","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","_getAnims","charts","complete","progress","listen","cb","reduce","acc","_duration","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","rej","resolved","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","resolveTargetOptions","_createAnimations","$shared","awaitAll","$animations","then","anim","all","scaleClip","allowedOverflow","defaultClip","toClip","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","convertObjectDataToArray","adata","isStacked","stacked","getStackKey","indexScale","valueScale","NEGATIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","shift","createDatasetContext","dataset","createDataContext","dataIndex","raw","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","static","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","isExtensible","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","parse","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","computeMinSampleSize","curr","_length","updateMinAndPrev","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v2","setInflateAmount","inflateAmount","BarController","grouped","_index_","_value_","iAxisKey","vAxisKey","super","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","getRatioAndOffset","circumference","cutout","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","DoughnutController","animateRotate","animateScale","spacing","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","_date","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getDistanceMetricForAxis","useX","useY","deltaX","deltaY","getIntersectItems","useFinalPosition","isPointInArea","evaluationFunc","inRange","getNearestRadialItems","getProps","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","getNearestItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","handleMaxPadding","updatePos","getMargins","marginForPositions","fitBoxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","height1","width1","addBox","_layers","z","removeBox","layoutItem","minPadding","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","eventListenerOptions","addListener","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","OffscreenCanvas","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","ceil","majorStart","majorEnd","reverseAlign","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","garbageCollect","caches","gcLen","getTickMarkLength","getTitleHeight","createScaleContext","createTickContext","titleAlign","titleArgs","titleX","titleY","positionAxisID","positionAxisID1","value1","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","minSize","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","jlen","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","ret1","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","registerDefaults","unregister","itemDefaults","defaultRoutes","routeDefaults","routes","propertyParts","sourceName","sourceScope","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getElement","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","registry","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","i1","getOpts","pluginOpts","pluginScopeKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","axisFromPosition","determineAxis","scaleOptions","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","defaultId","defaultScaleOptions","defaultID","initOptions","initData","initConfig","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","needContext","subResolver","resolverCache","hasFunction","version","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getDatasetArea","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","ilen1","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","getVisibleDatasetCount","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","clipArc","pixelMargin","angleMargin","toRadiusCorners","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","circular","innerR","spacingOffset","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","pCenter1","innerMidAdjustedAngle","pCenter2","p8","pCenter3","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","fix","radiusOffset","setStyle","lineCap","getLineMethod","stepped","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","strokePathWithCache","path","_path","Path2D","strokePathDirect","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_interpolate","interpolated","inRange$1","hitRadius","PointElement","hoverRadius","mouseX","mouseY","inXRange","inYRange","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","parseBorderRadius","maxR","enableBorder","boundingRects","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","hitbox1","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","textDirection","realX","fontLineHeight","calculateLegendItemHeight","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","plugin_legend","_element","_args","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","plugin_title","WeakMap","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","addIfString","addedLabels","unshift","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","LinearScale","LogarithmicScale","_zero","changeExponent","generateTicks","RadialLinearScale","animate","angleLines","pointLabels","centerPointLabels","xCenter","yCenter","drawingArea","_pointLabels","_pointLabelItems","getTickBackdropHeight","fitWithPointLabels","setCenterPoint","leftMovement","rightMovement","topMovement","bottomMovement","getIndexAngle","angleMultiplier","getDistanceFromCenterForValue","scalingFactor","getValueForDistanceFromCenter","scaledDistance","getPointLabelContext","pointLabel","createPointLabelContext","getPointPosition","distanceFromCenter","additionalAngle","getPointPositionForValue","getBasePosition","getPointLabelPosition","pathRadiusLine","drawPointLabels","drawRadiusLine","INTERVALS","millisecond","common","steps","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","CommonProps","required","default","datasetIdKey","updateMode","Props","compatProps","internals","attrs","toRawIfProxy","cloneProxy","src","setOptions","nextOptions","setLabels","currentData","nextLabels","setDatasets","nextDatasets","addedDatasets","nextDataset","currentDataset","find","cloneData","nextData","setup","param","expose","canvasRef","chartRef","renderChart","clonedData","proxiedData","destroyChart","param1","nextOptionsProxy","nextDataProxy","prevOptionsProxy","prevDataProxy","shouldUpdate","prevOptions","prevLabels","prevDatasets","deep","ref","createTypedChart","registerables","reforwardRef","Bar","Doughnut","Line","Pie"],"sourceRoot":""}